//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MortysDLP.UITexte {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class UITexte {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UITexte() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MortysDLP.UITexte.UITexte", typeof(UITexte).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Durchsuchen ähnelt.
        /// </summary>
        internal static string Button_Browse {
            get {
                return ResourceManager.GetString("Button_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abbrechen ähnelt.
        /// </summary>
        internal static string Button_Cancel {
            get {
                return ResourceManager.GetString("Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Schließen ähnelt.
        /// </summary>
        internal static string Button_Close {
            get {
                return ResourceManager.GetString("Button_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        internal static string Button_OK {
            get {
                return ResourceManager.GetString("Button_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verlauf leeren ähnelt.
        /// </summary>
        internal static string DownloadHistory_Button_Clear {
            get {
                return ResourceManager.GetString("DownloadHistory_Button_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Neu verwenden ähnelt.
        /// </summary>
        internal static string DownloadHistory_Button_ReUse {
            get {
                return ResourceManager.GetString("DownloadHistory_Button_ReUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kein Verlauf vorhanden ähnelt.
        /// </summary>
        internal static string DownloadHistory_Label_EmptyHistory {
            get {
                return ResourceManager.GetString("DownloadHistory_Label_EmptyHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hier ist noch gähnende Leere... Aber keine Sorge: Deine nächsten Downloads landen alle hier und warten nur darauf, von dir wiederverwendet zu werden! ähnelt.
        /// </summary>
        internal static string DownloadHistory_Label_EmptyHistory_Info {
            get {
                return ResourceManager.GetString("DownloadHistory_Label_EmptyHistory_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MortysDLP - Download Verlauf ähnelt.
        /// </summary>
        internal static string DownloadHistory_Title {
            get {
                return ResourceManager.GetString("DownloadHistory_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die - AudioOnly-Downloadpfad fehlt. \n ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_AudioPathEmpty {
            get {
                return ResourceManager.GetString("DownloadPathDialog_AudioPathEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wähle den AudioOnly-Download-Ordner ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_BrowseAudioFolder_Description {
            get {
                return ResourceManager.GetString("DownloadPathDialog_BrowseAudioFolder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wähle den Download-Ordner ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_BrowseFolder_Description {
            get {
                return ResourceManager.GetString("DownloadPathDialog_BrowseFolder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die - Standard-Downloadpfad fehlt.\n ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_DownloadPathEmpty {
            get {
                return ResourceManager.GetString("DownloadPathDialog_DownloadPathEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurde kein Download-Ordner gewählt.\n ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_NoDownloadFolder_Message {
            get {
                return ResourceManager.GetString("DownloadPathDialog_NoDownloadFolder_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kein Ordner gewählt ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_NoDownloadFolder_Title {
            get {
                return ResourceManager.GetString("DownloadPathDialog_NoDownloadFolder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die \nMöchten Sie den Windows Standard-Ordner verwenden? ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_SetDefaultWindowsDownloadFolder {
            get {
                return ResourceManager.GetString("DownloadPathDialog_SetDefaultWindowsDownloadFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audio-Only-Pfad hinzufügen ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_StandardAudioDownloadPathLabel {
            get {
                return ResourceManager.GetString("DownloadPathDialog_StandardAudioDownloadPathLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard Download-Pfad: ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_StandardDownloadPathLabel {
            get {
                return ResourceManager.GetString("DownloadPathDialog_StandardDownloadPathLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download-Pfad ändern ähnelt.
        /// </summary>
        internal static string DownloadPathDialog_Title {
            get {
                return ResourceManager.GetString("DownloadPathDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fehler ähnelt.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quellverzeichnis nicht gefunden: {0} ähnelt.
        /// </summary>
        internal static string Error_DirectoryNotFound {
            get {
                return ResourceManager.GetString("Error_DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Browser konnte nicht geöffnet werden. ähnelt.
        /// </summary>
        internal static string Error_OpenBrowser {
            get {
                return ResourceManager.GetString("Error_OpenBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download abbrechen ähnelt.
        /// </summary>
        internal static string MainWindow_Button_DownloadAbort {
            get {
                return ResourceManager.GetString("MainWindow_Button_DownloadAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download starten ähnelt.
        /// </summary>
        internal static string MainWindow_Button_DownloadStart {
            get {
                return ResourceManager.GetString("MainWindow_Button_DownloadStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verlauf ähnelt.
        /// </summary>
        internal static string MainWindow_Button_History {
            get {
                return ResourceManager.GetString("MainWindow_Button_History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download-Pfad ändern ähnelt.
        /// </summary>
        internal static string MainWindow_Button_Menu_ChangeDownloadPath {
            get {
                return ResourceManager.GetString("MainWindow_Button_Menu_ChangeDownloadPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Einstellungen ähnelt.
        /// </summary>
        internal static string MainWindow_Button_Menu_Settings {
            get {
                return ResourceManager.GetString("MainWindow_Button_Menu_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Einstellungen speichern ähnelt.
        /// </summary>
        internal static string MainWindow_Button_SettingsSave {
            get {
                return ResourceManager.GetString("MainWindow_Button_SettingsSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gültige Formate: mm:ss oder hh:mm:ss. Beispiel: 01:23 oder 01:02:03. Die Angabe bedeutet Minuten:Sekunden oder Stunden:Minuten:Sekunden. Damit kannst du z.B. einen Ausschnitt von 00:01:30 bis 00:02:45 herunterladen. ähnelt.
        /// </summary>
        internal static string MainWindow_Button_Timespan_Info {
            get {
                return ResourceManager.GetString("MainWindow_Button_Timespan_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug-Ausgabe ähnelt.
        /// </summary>
        internal static string MainWindow_DebugInfo {
            get {
                return ResourceManager.GetString("MainWindow_DebugInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] Download abgebrochen! ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_DownloadCancel {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_DownloadCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] Download abgeschlossen! ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_DownloadSuccess {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_DownloadSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] Interner Fehler: {0} ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_InternalError {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] Kein Titel von yt-dlp erhalten. Fehler: {0} ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_NoTitleFromYTDLP {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_NoTitleFromYTDLP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] Prozess beendet mit Code: {0} ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_ProcessEnd {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_ProcessEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] [EXCEPTION] {0} ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_ThrowException {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_ThrowException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [MDLP] Prozess beendet mit Code: {0} ähnelt.
        /// </summary>
        internal static string MainWindow_DebugOutput_YTDLPError {
            get {
                return ResourceManager.GetString("MainWindow_DebugOutput_YTDLPError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download-Pfad wurde nicht gefunden! ähnelt.
        /// </summary>
        internal static string MainWindow_Download_PathNotFound {
            get {
                return ResourceManager.GetString("MainWindow_Download_PathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unbekannter Titel ähnelt.
        /// </summary>
        internal static string MainWindow_Download_UnknownTitle {
            get {
                return ResourceManager.GetString("MainWindow_Download_UnknownTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NUR Audio herunterladen (Standard: mp3) ähnelt.
        /// </summary>
        internal static string MainWindow_Label_AudioOnly {
            get {
                return ResourceManager.GetString("MainWindow_Label_AudioOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audio-Only Pfad: ähnelt.
        /// </summary>
        internal static string MainWindow_Label_AudioOnly_Info {
            get {
                return ResourceManager.GetString("MainWindow_Label_AudioOnly_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download-Audio-Pfad: ähnelt.
        /// </summary>
        internal static string MainWindow_Label_AudioPathInfo {
            get {
                return ResourceManager.GetString("MainWindow_Label_AudioPathInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pfad: ( {0} )nicht gefunden! ähnelt.
        /// </summary>
        internal static string MainWindow_Label_Click_DownloadPathNotFound {
            get {
                return ResourceManager.GetString("MainWindow_Label_Click_DownloadPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download-Pfad: ähnelt.
        /// </summary>
        internal static string MainWindow_Label_DownloadPathInfo {
            get {
                return ResourceManager.GetString("MainWindow_Label_DownloadPathInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abgebrochen ähnelt.
        /// </summary>
        internal static string MainWindow_Label_DownloadStatus_Cancel {
            get {
                return ResourceManager.GetString("MainWindow_Label_DownloadStatus_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lädt... ähnelt.
        /// </summary>
        internal static string MainWindow_Label_DownloadStatus_Loading {
            get {
                return ResourceManager.GetString("MainWindow_Label_DownloadStatus_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abgeschlossen ähnelt.
        /// </summary>
        internal static string MainWindow_Label_DownloadStatus_Success {
            get {
                return ResourceManager.GetString("MainWindow_Label_DownloadStatus_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Breche ab... ähnelt.
        /// </summary>
        internal static string MainWindow_Label_DownloadStatus_WhileCanceling {
            get {
                return ResourceManager.GetString("MainWindow_Label_DownloadStatus_WhileCanceling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zeitspanne von:  ähnelt.
        /// </summary>
        internal static string MainWindow_Label_TimespanLeft {
            get {
                return ResourceManager.GetString("MainWindow_Label_TimespanLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die - ähnelt.
        /// </summary>
        internal static string MainWindow_Label_TimespanMiddle {
            get {
                return ResourceManager.GetString("MainWindow_Label_TimespanMiddle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die hh:mm:ss oder mm:ss angeben! ähnelt.
        /// </summary>
        internal static string MainWindow_Label_TimespanRight {
            get {
                return ResourceManager.GetString("MainWindow_Label_TimespanRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von Start bis Sekunde:  ähnelt.
        /// </summary>
        internal static string MainWindow_Label_TimeStartLeft {
            get {
                return ResourceManager.GetString("MainWindow_Label_TimeStartLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die herunterladen ähnelt.
        /// </summary>
        internal static string MainWindow_Label_TimeStartRight {
            get {
                return ResourceManager.GetString("MainWindow_Label_TimeStartRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die URL eingeben: ähnelt.
        /// </summary>
        internal static string MainWindow_Label_URL {
            get {
                return ResourceManager.GetString("MainWindow_Label_URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Videoformat für Schnittprogramme anpassen (x264) ähnelt.
        /// </summary>
        internal static string MainWindow_Label_Videoformat {
            get {
                return ResourceManager.GetString("MainWindow_Label_Videoformat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Nicht zusammen mit &quot;NUR Audio&quot;) ähnelt.
        /// </summary>
        internal static string MainWindow_Label_Videoformat_Info {
            get {
                return ResourceManager.GetString("MainWindow_Label_Videoformat_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sollen die Einstellungen für den nächsten Programmstart gespeichert werden? ähnelt.
        /// </summary>
        internal static string MessageBox_SaveSettings_Question {
            get {
                return ResourceManager.GetString("MessageBox_SaveSettings_Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Einstellungen abspeichern? ähnelt.
        /// </summary>
        internal static string MessageBox_SaveSettings_Title {
            get {
                return ResourceManager.GetString("MessageBox_SaveSettings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Einfacher Video- und Audio-Downloader für verschiedene Plattformen. ähnelt.
        /// </summary>
        internal static string Softwareinfo {
            get {
                return ResourceManager.GetString("Softwareinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alle Tools sind aktuell. ähnelt.
        /// </summary>
        internal static string Splash_AllToolsOk {
            get {
                return ResourceManager.GetString("Splash_AllToolsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prüfe Voraussetzungen (yt-dlp, ffmpeg, ffprobe)... ähnelt.
        /// </summary>
        internal static string Splash_CheckingTools {
            get {
                return ResourceManager.GetString("Splash_CheckingTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starte Anwendung... ähnelt.
        /// </summary>
        internal static string Splash_Closing {
            get {
                return ResourceManager.GetString("Splash_Closing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keine Updates verfügbar. ähnelt.
        /// </summary>
        internal static string Splash_NoUpdate {
            get {
                return ResourceManager.GetString("Splash_NoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suche nach neuer Version... ähnelt.
        /// </summary>
        internal static string Splash_SearchingForUpdate {
            get {
                return ResourceManager.GetString("Splash_SearchingForUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starte Anwendung... ähnelt.
        /// </summary>
        internal static string Splash_StartingApp {
            get {
                return ResourceManager.GetString("Splash_StartingApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starte Update ähnelt.
        /// </summary>
        internal static string Splash_StartingUpdate {
            get {
                return ResourceManager.GetString("Splash_StartingUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Einige Tools fehlen oder sind veraltet. Bitte aktualisieren Sie die Tools manuell. ähnelt.
        /// </summary>
        internal static string Splash_ToolsMissing {
            get {
                return ResourceManager.GetString("Splash_ToolsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fehler beim Überprüfen auf Updates. Starte Anwendung ohne Update. ähnelt.
        /// </summary>
        internal static string Splash_UpdateError {
            get {
                return ResourceManager.GetString("Splash_UpdateError", resourceCulture);
            }
        }
    }
}
