<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Splash_CheckingTools" xml:space="preserve">
    <value>Checking requirements (yt-dlp, ffmpeg, ffprobe)...</value>
  </data>
  <data name="Splash_StartingUpdate" xml:space="preserve">
    <value>Starting update</value>
  </data>
  <data name="Splash_StartingApp" xml:space="preserve">
    <value>Starting application...</value>
  </data>
  <data name="Splash_UpdateError" xml:space="preserve">
    <value>Error while checking for updates. Starting app without update.</value>
  </data>
  <data name="Splash_NoUpdate" xml:space="preserve">
    <value>No updates available.</value>
  </data>
  <data name="Splash_AllToolsOk" xml:space="preserve">
    <value>All tools are up to date. </value>
  </data>
  <data name="Splash_ToolsMissing" xml:space="preserve">
    <value>Some tools are missing or outdated. Please update the tools manually.</value>
  </data>
  <data name="Splash_Closing" xml:space="preserve">
    <value>Starting application...</value>
  </data>
  <data name="Error_DirectoryNotFound" xml:space="preserve">
    <value>Source directory not found: {0}</value>
  </data>
  <data name="Splash_SearchingForUpdate" xml:space="preserve">
    <value>Searching for new version...</value>
  </data>
  <data name="DownloadPathDialog_NoDownloadFolder_Message" xml:space="preserve">
    <value>- Default download path No download folder has been selected. \n</value>
  </data>
  <data name="DownloadPathDialog_NoDownloadFolder_Title" xml:space="preserve">
    <value>No folder selected</value>
  </data>
  <data name="DownloadPathDialog_BrowseFolder_Description" xml:space="preserve">
    <value>Select the download folder</value>
  </data>
  <data name="DownloadPathDialog_BrowseAudioFolder_Description" xml:space="preserve">
    <value>Select the AudioOnly download folder</value>
  </data>
  <data name="DownloadPathDialog_DownloadPathEmpty" xml:space="preserve">
    <value>- Default download path is missing. \n</value>
  </data>
  <data name="DownloadPathDialog_AudioPathEmpty" xml:space="preserve">
    <value>- AudioOnly download path is missing. \n</value>
  </data>
  <data name="DownloadPathDialog_SetDefaultWindowsDownloadFolder" xml:space="preserve">
    <value>\nDo you want to use the Windows default folder?</value>
  </data>
  <data name="DownloadPathDialog_StandardDownloadPathLabel" xml:space="preserve">
    <value>Default download path:</value>
  </data>
  <data name="DownloadPathDialog_StandardAudioDownloadPathLabel" xml:space="preserve">
    <value>Add audio-only track</value>
  </data>
  <data name="Button_Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="DownloadPathDialog_Title" xml:space="preserve">
    <value>Change download path</value>
  </data>
  <data name="Button_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Hauptfenster_Button_DownloadStart" xml:space="preserve">
    <value>Start download</value>
  </data>
  <data name="Hauptfenster_Button_DownloadAbort" xml:space="preserve">
    <value>Cancel download</value>
  </data>
  <data name="Hauptfenster_Button_SettingsSave" xml:space="preserve">
    <value>Save settings</value>
  </data>
  <data name="Hauptfenster_Button_History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Hauptfenster_Button_Timespan_Info" xml:space="preserve">
    <value>Valid formats: mm:ss or hh:mm:ss. Example: 01:23 or 01:02:03. The specification means minutes:seconds or hours:minutes:seconds. This allows you to download a section from 00:01:30 to 00:02:45, for example.</value>
  </data>
  <data name="Hauptfenster_Label_TimespanLeft" xml:space="preserve">
    <value>Time period from:</value>
  </data>
  <data name="Hauptfenster_Label_TimespanMiddle" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="Hauptfenster_Label_TimespanRight" xml:space="preserve">
    <value>Enter hh:mm:ss or mm:ss!</value>
  </data>
  <data name="Hauptfenster_Label_TimeStartLeft" xml:space="preserve">
    <value>From start to second:</value>
  </data>
  <data name="Hauptfenster_Label_TimeStartRight" xml:space="preserve">
    <value> </value>
  </data>
  <data name="Hauptfenster_Label_Videoformat" xml:space="preserve">
    <value>Adjust video format for editing programs (x264)</value>
  </data>
  <data name="Hauptfenster_Label_Videoformat_Info" xml:space="preserve">
    <value>(Not together with “audio only”)</value>
  </data>
  <data name="Hauptfenster_Label_AudioOnly" xml:space="preserve">
    <value>Download audio only (default: mp3)</value>
  </data>
  <data name="Hauptfenster_Label_AudioOnly_Info" xml:space="preserve">
    <value>(Not together with video format!)</value>
  </data>
  <data name="Softwareinfo" xml:space="preserve">
    <value>Simple video and audio downloader for various platforms.</value>
  </data>
  <data name="Hauptfenster_DebugInfo" xml:space="preserve">
    <value>Debug output</value>
  </data>
  <data name="Hauptfenster_Button_Menu_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Hauptfenster_Button_Menu_ChangeDownloadPath" xml:space="preserve">
    <value>Change download path</value>
  </data>
  <data name="Button_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Hauptfenster_Label_DownloadPathInfo" xml:space="preserve">
    <value>Download path:</value>
  </data>
  <data name="Hauptfenster_Label_AudioPathInfo" xml:space="preserve">
    <value>Download audio path:</value>
  </data>
  <data name="Hauptfenster_Label_URL" xml:space="preserve">
    <value>Enter URL:</value>
  </data>
  <data name="DownloadHistory_Title" xml:space="preserve">
    <value>MortysDLP - Download history</value>
  </data>
  <data name="DownloadHistory_Button_ReUse" xml:space="preserve">
    <value>Reuse selection</value>
  </data>
  <data name="DownloadHistory_Button_Clear" xml:space="preserve">
    <value>Clear history</value>
  </data>
  <data name="DownloadHistory_Label_EmptyHistory" xml:space="preserve">
    <value>History is empty!</value>
  </data>
  <data name="DownloadHistory_Label_EmptyHistory_Info" xml:space="preserve">
    <value>There's nothing here yet... But don't worry: your next downloads will all end up here, just waiting for you to reuse them!</value>
  </data>
  <data name="MessageBox_SaveSettings_Title" xml:space="preserve">
    <value>Save settings?</value>
  </data>
  <data name="MessageBox_SaveSettings_Question" xml:space="preserve">
    <value>Would you like to save the settings for the next program start?</value>
  </data>
</root>